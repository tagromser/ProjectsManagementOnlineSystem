{"version":3,"sources":["generic.ts"],"names":[],"mappings":"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","file":"../../generic.js","sourcesContent":["\r\n\r\n/**\r\n * Осуществляет инициализацию модулей.\r\n */\r\nvar initialize = () => {\r\n    initializeViewIndex();\r\n}\r\n\r\n/**\r\n * Инициализирует скрипт выполняемый на главной странице с таблицей.\r\n */\r\nfunction initializeViewIndex(): void {\r\n    let viewIndex = new ViewIndex(\r\n        \"#tool-strip-edit-button\",\r\n        \"#tool-strip-delete-button\",\r\n        \"#tool-strip-details-button\",\r\n        \"#tool-strip-workers-button\",\r\n        \"#main-table\");\r\n}\r\n\r\nclass ViewIndex {\r\n    /**\r\n     * Конструктор.\r\n     * @param editButtonQuery - Имя элемента содержащего кнопку \"Редактировать\".\r\n     * @param deleteButtonQuery - Имя элемента содержащего кнопку \"Удалить\".\r\n     * @param detailsButtonQuery - Имя элемента содержащего кнопку \"Подробнее\".\r\n     * @param workersButtonQuery - Имя элемента содержащего кнопку \"Работники проекта\".\r\n     * @param tableQuery - Имя элемента содержащего таблицу с данными.\r\n     */\r\n    constructor(editButtonQuery: string,\r\n        deleteButtonQuery: string,\r\n        detailsButtonQuery: string,\r\n        workersButtonQuery: string,\r\n        tableQuery: string)\r\n    {\r\n\r\n        let editButton = document.querySelector(editButtonQuery) as HTMLLinkElement;\r\n        let deleteButton = document.querySelector(deleteButtonQuery) as HTMLLinkElement;\r\n        let detailsButton = document.querySelector(detailsButtonQuery) as HTMLLinkElement;\r\n        let workersButton = document.querySelector(workersButtonQuery) as HTMLLinkElement;;\r\n        let table = document.querySelector(tableQuery) as HTMLTableElement;\r\n\r\n        //Если элементы не найдены.\r\n        //if (!editButton || !deleteButton || !detailsButton || !workersButton || !table)\r\n        //    return;\r\n\r\n        this.editButton = editButton;\r\n        this.deleteButton = deleteButton;\r\n        this.detailsButton = detailsButton;\r\n        this.workersButton = workersButton;\r\n        this.table = table;\r\n\r\n        this.initializeEvents();\r\n    }\r\n\r\n    /**\r\n     * Элемент содержащий кнопку \"Редактировать\".\r\n     */\r\n    private editButton: HTMLLinkElement;\r\n\r\n    /**\r\n     * Элемент содержащий кнопку \"Удалить\".\r\n     */\r\n    private deleteButton: HTMLLinkElement;\r\n\r\n    /**\r\n     * Элемент содержащий кнопку \"Подробнее\".\r\n     */\r\n    private detailsButton: HTMLLinkElement;\r\n\r\n    /**\r\n     * Элемент содержащий кнопку \"Работники проекта\".\r\n     */\r\n    private workersButton: HTMLLinkElement;\r\n\r\n    /**\r\n     * Элемент содержащий таблицу с данными.\r\n     */\r\n    private table: HTMLTableElement;\r\n\r\n    /**\r\n     * Инициализация событий.\r\n     */\r\n    private initializeEvents(): void {\r\n        let tableRows = this.table.querySelectorAll(\"tbody > tr\");\r\n\r\n        for (let i = 0; i < tableRows.length; i++) {\r\n            let row = tableRows[i] as HTMLTableRowElement;\r\n            row.onclick = event => this.tableRowClick(row);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Происходит при нажатии на строку.\r\n     * @param row\r\n     */\r\n    private tableRowClick(row: HTMLTableRowElement): void {\r\n        let selectedRows = this.table.querySelectorAll(\"tbody > tr.table-active\");\r\n\r\n        for (let i = 0; i < selectedRows.length; i++) {\r\n            let selectedRow = selectedRows[i] as HTMLTableRowElement;\r\n            selectedRow.classList.remove(\"table-active\");\r\n        }\r\n\r\n        row.classList.add(\"table-active\");\r\n\r\n        if (this.deleteButton != null)\r\n            this.deleteButton.href = row.dataset[\"delete\"];\r\n        if (this.editButton != null)\r\n            this.editButton.href = row.dataset[\"edit\"];\r\n        if (this.detailsButton != null)\r\n            this.detailsButton.href = row.dataset[\"details\"];\r\n        if (this.workersButton != null)\r\n            this.workersButton.href = row.dataset[\"workers\"];\r\n\r\n        if (this.editButton.classList.contains(\"disabled\"))\r\n            this.editButton.classList.remove(\"disabled\");\r\n\r\n        if (this.deleteButton.classList.contains(\"disabled\"))\r\n            this.deleteButton.classList.remove(\"disabled\");\r\n\r\n        if (this.detailsButton.classList.contains(\"disabled\"))\r\n            this.detailsButton.classList.remove(\"disabled\");\r\n\r\n        if (this.workersButton.classList.contains(\"disabled\"))\r\n            this.workersButton.classList.remove(\"disabled\");\r\n\r\n        this.deleteButton.onclick = event => this.deleteButtonClick(event);\r\n    }\r\n\r\n    /**\r\n     * Происходит при нажатии на кнопку \"Удалить\".\r\n     * @param event\r\n     */\r\n    private deleteButtonClick(event: MouseEvent): void {\r\n        if (!confirm(\"Вы уверены, что хотите удалить данную строку?\"))\r\n            event.preventDefault();\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"load\", initialize);"]}